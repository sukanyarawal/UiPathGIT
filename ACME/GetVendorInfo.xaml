<Activity mc:Ignorable="sap sap2010 sads" x:Class="Get_VendorInfo"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="out_TaxID" Type="InArgument(x:String)" />
    <x:Property Name="out_Name" Type="InArgument(x:String)" />
    <x:Property Name="out_WIIDNumbar" Type="InOutArgument(x:String)" />
    <x:Property Name="inOut_confi" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>Get_VendorInfo_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Core</AssemblyReference>
      <AssemblyReference>UiPath.Core.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Get_VendorInfo" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence DisplayName="Screen scraping" sap2010:WorkflowViewState.IdRef="Sequence_3">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="GetText" />
      </Sequence.Variables>
      <Sequence DisplayName="Screen scraping" sap2010:WorkflowViewState.IdRef="Sequence_6">
        <ui:BrowserScope Browser="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" UiBrowser="{x:Null}" BrowserType="IE" DisplayName="Attach Browser 'ACMESyste Page'" sap2010:WorkflowViewState.IdRef="BrowserScope_2" InformativeScreenshot="8b034baa742366056b54041f1613fea5" Selector="&lt;html title='ACME System 1 - Work Items' /&gt;">
          <ui:BrowserScope.Body>
            <ActivityAction x:TypeArguments="x:Object">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_5">
                <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_9" Text="[&quot;Get_VendorInfo WIID&quot;+out_WIIDNumbar]" />
                <ui:GetFullText DisplayName="Get full text 'P'" sap2010:WorkflowViewState.IdRef="GetFullText_1" IgnoreHidden="False">
                  <ui:GetFullText.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="3c6fe7183b92b03874fc8a0c0d061892" Selector="&lt;webctrl idx='1' tag='P' /&gt;" WaitForReady="COMPLETE" />
                  </ui:GetFullText.Target>
                  <ui:GetFullText.Text>
                    <OutArgument x:TypeArguments="x:String">[GetText]</OutArgument>
                  </ui:GetFullText.Text>
                </ui:GetFullText>
                <Sequence DisplayName="TaxID" sap2010:WorkflowViewState.IdRef="Sequence_7">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="inputString" />
                    <Variable x:TypeArguments="x:String" Name="labelBefore" />
                    <Variable x:TypeArguments="x:String" Name="labelAfter" />
                    <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="matchValue" />
                  </Sequence.Variables>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_7">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[inputString]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[GetText.Replace(Environment.NewLine," ")]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_8" Text="[&quot;second write line&quot;+inputString]" />
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_8">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[labelBefore]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">TaxID:</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_9">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[labelAfter]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">Name</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:Matches DisplayName="Matches - Extract text between two labels" sap2010:WorkflowViewState.IdRef="Matches_3" Input="[inputString]" Pattern="[&quot;(?&lt;=&quot; + labelBefore + &quot;)(.*?)(?=&quot; + labelAfter + &quot;)&quot;]" RegexOption="IgnoreCase, Compiled" Result="[matchValue]" />
                  <If Condition="[(matchValue is Nothing) Or (matchvalue.Count = 0)]" DisplayName="If no match was found" sap2010:WorkflowViewState.IdRef="If_3">
                    <If.Then>
                      <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_5" Text="No match was found" />
                    </If.Then>
                    <If.Else>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_8">
                        <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_6" Text="[&quot;TaxId is &quot;+matchValue(0).Value.Trim()]" />
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_10">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[out_TaxID]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[matchValue(0).Value.Trim()]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
                <Sequence DisplayName="Name" sap2010:WorkflowViewState.IdRef="Sequence_11">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="inputString" />
                    <Variable x:TypeArguments="x:String" Name="labelBefore" />
                    <Variable x:TypeArguments="x:String" Name="labelAfter" />
                    <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="matchValue" />
                  </Sequence.Variables>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_1">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[inputString]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[GetText.Replace(Environment.NewLine," ")]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_2">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[labelBefore]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">Name:</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_3">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[labelAfter]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">Address:</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:Matches DisplayName="Matches - Extract text between two labels" sap2010:WorkflowViewState.IdRef="Matches_1" Input="[inputString]" Pattern="[&quot;(?&lt;=&quot; + labelBefore + &quot;)(.*?)(?=&quot; + labelAfter + &quot;)&quot;]" RegexOption="IgnoreCase, Compiled" Result="[matchValue]" />
                  <If Condition="[(matchValue is Nothing) Or (matchvalue.Count = 0)]" DisplayName="If no match was found" sap2010:WorkflowViewState.IdRef="If_1">
                    <If.Then>
                      <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="No match was found" />
                    </If.Then>
                    <If.Else>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_9">
                        <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[&quot;Name is -&quot;+matchValue(0).Value.Trim()]" />
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_11">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[out_Name]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[matchValue(0).Value.Trim()]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke workflow file" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Framework\DownloadingMonthlyReport.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InOutArgument x:TypeArguments="x:String" x:Key="in_TaxId">[out_TaxID]</InOutArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="out_month" />
                    <OutArgument x:TypeArguments="x:String" x:Key="out_IdNumber" />
                    <InOutArgument x:TypeArguments="x:String" x:Key="out_ConfirmationId" />
                    <InOutArgument x:TypeArguments="x:String" x:Key="in_WIIDNumber">[out_WIIDNumbar]</InOutArgument>
                    <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[inOut_confi]</InOutArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </Sequence>
            </ActivityAction>
          </ui:BrowserScope.Body>
        </ui:BrowserScope>
      </Sequence>
    </Sequence>
    <sads:DebugSymbol.Symbol>d0dDOlxVc2Vyc1xkZWxsXERlc2t0b3BcV290a0l0ZW00XFdvdGtJdGVtNFxGcmFtZXdvcmtcR2V0X1ZlbmRvckluZm8ueGFtbEJGA9QBDgIBAUcF0gEQAgECSwfRARICAQNMCdABGwIBBEygAkzTAgIBWFIPzQEaAgEFUxFTnQECAVVUEVsiAgFRXBGPARwCAS6QARHCARwCAQ7DARHMASkCAQZTaFOaAQIBVlakAVbHAQIBVFk9WUYCAVJjE2ocAgFNaxNrmgECAUpsE3McAgFGdBN7HAIBQnwTfLcCAgE6fROOARgCAS+XAROeARwCASqfAROmARwCASanAROuARwCASKvAROvAbcCAgEasAETwQEYAgEPxQFQxQFbAgEMyQFVyQFlAgEKygFrygF4AgEIwwG9AcMB5gECAQdoPmhoAgFQZT9lTAIBTmtqa5cBAgFLcT5xRAIBSW4/bkwCAUd5PnlCAgFFdj92SwIBQ3yJAXyYAQIBQHymAny0AgIBPnyhAXz7AQIBO30hfVYCATB/F3+FAQIBOIIBF4wBIgIBMZwBPpwBaAIBLZkBP5kBTAIBK6QBPqQBQwIBKaEBP6EBTAIBJ6wBPqwBRgIBJakBP6kBSwIBI68BiQGvAZgBAgEgrwGmAq8BtAICAR6vAaEBrwH7AQIBG7ABIbABVgIBELIBF7IBhQECARi1ARe/ASICARF/bn+CAQIBOYMBGYMBpwECATaEARmLASICATKyAW6yAYIBAgEZtgEZtgGnAQIBFrcBGb4BIgIBEoMBcIMBpAECATeJAUSJAWACATWGAUWGAVACATO2AXC2AaQBAgEXvAFEvAFgAgEVuQFFuQFPAgET</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="WriteLine_9" sap:VirtualizedContainerService.HintSize="522,61" />
      <sap2010:ViewStateData Id="GetFullText_1" sap:VirtualizedContainerService.HintSize="522,106" />
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="500,60" />
      <sap2010:ViewStateData Id="WriteLine_8" sap:VirtualizedContainerService.HintSize="500,61" />
      <sap2010:ViewStateData Id="Assign_8" sap:VirtualizedContainerService.HintSize="500,60" />
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="500,60" />
      <sap2010:ViewStateData Id="Matches_3" sap:VirtualizedContainerService.HintSize="500,22" />
      <sap2010:ViewStateData Id="WriteLine_5" sap:VirtualizedContainerService.HintSize="211,61" />
      <sap2010:ViewStateData Id="WriteLine_6" sap:VirtualizedContainerService.HintSize="242,61" />
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="264,285">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="500,432" />
      <sap2010:ViewStateData Id="Sequence_7" sap:VirtualizedContainerService.HintSize="522,1019">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="500,60" />
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="500,60" />
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="500,60" />
      <sap2010:ViewStateData Id="Matches_1" sap:VirtualizedContainerService.HintSize="500,22" />
      <sap2010:ViewStateData Id="WriteLine_1" sap:VirtualizedContainerService.HintSize="211,61" />
      <sap2010:ViewStateData Id="WriteLine_2" sap:VirtualizedContainerService.HintSize="242,61" />
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_9" sap:VirtualizedContainerService.HintSize="264,285">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="500,432" />
      <sap2010:ViewStateData Id="Sequence_11" sap:VirtualizedContainerService.HintSize="522,918">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_1" sap:VirtualizedContainerService.HintSize="522,87" />
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="544,2475">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="BrowserScope_2" sap:VirtualizedContainerService.HintSize="558,2621" />
      <sap2010:ViewStateData Id="Sequence_6" sap:VirtualizedContainerService.HintSize="580,2745">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="602,2869">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="624,2993">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Get_VendorInfo_1" sap:VirtualizedContainerService.HintSize="664,3073" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>